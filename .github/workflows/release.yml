# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release Nuget

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Verify commit exists in origin/main
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git branch --remote --contains | grep origin/main
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Build
      run: dotnet build --configuration Release /p:Version=${VERSION}
    - name: Test
      run: dotnet test --configuration Release /p:Version=${VERSION} --no-build
    - name: Pack
      run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .

    - name: Push Core
      run: dotnet nuget push NP.Lti13Platform.Core.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Push Assignment and Grade Services
      run: dotnet nuget push NP.Lti13Platform.AssignmentGradeServices.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Push Deep Linking
      run: dotnet nuget push NP.Lti13Platform.DeepLinking.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Push Name and Role Provisioning Services
      run: dotnet nuget push NP.Lti13Platform.NameRoleProvisioningService.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Push Platform
      run: dotnet nuget push NP.Lti13Platform.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}